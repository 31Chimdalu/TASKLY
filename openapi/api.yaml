openapi: 3.0.0
info:
  title: Taskly API
  version: 1.0.0
  description: 'API for Taskly application'
  contact:
    name: Support Team
    email: support@taskly.example.com
    url: https://taskly.example.com/support
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
tags:
  - name: Board Management
    description: Endpoints for creating and retrieving boards
  - name: Notification Management
    description: Endpoints for retrieving notifications
  - name: Organization Management
    description: Endpoints for creating and managing organizations
  - name: Task Management
    description: Endpoints for creating and retrieving tasks
  - name: User Management
    description: Endpoints for user registration and login
paths:
  /register:
    post:
      summary: Register a new user
      operationId: registerUser
      tags:
        - User Management
      description: Registers a new user with the provided username, password, and organization name.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                organizationName:
                  type: string
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  organizationId:
                    type: string
        '400':
          description: Bad request
  /login:
    post:
      summary: Login a user
      operationId: loginUser
      tags:
        - User Management
      description: Logs in a user and returns a JWT token for authentication.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: A JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Invalid credentials
  /organizations:
    post:
      summary: Create a new organization
      operationId: createOrganization
      tags:
        - Organization Management
      description: Creates a new organization with the given name.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Organization created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  id:
                    type: string
        '400':
          description: Bad request
  /boards:
    get:
      summary: Get boards for an organization
      operationId: getBoards
      tags:
        - Board Management
      description: Retrieves all boards for the authenticated organization.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of boards
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    id:
                      type: string
        '401':
          description: Unauthorized
    post:
      summary: Create a new board
      operationId: createBoard
      tags:
        - Board Management
      description: Creates a new board with the given name for the authenticated organization.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Board created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  id:
                    type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized
  /tasks/{boardId}:
    get:
      summary: Get tasks for a board
      operationId: getTasks
      tags:
        - Task Management
      description: Retrieves all tasks for a specific board, with optional filters.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: boardId
          required: true
          description: The ID of the board
          schema:
            type: string
        - in: query
          name: status
          description: Status of the tasks to filter
          schema:
            type: string
        - in: query
          name: assignee
          description: Assignee of the tasks to filter
          schema:
            type: string
        - in: query
          name: priority
          description: Priority of the tasks to filter
          schema:
            type: string
        - in: query
          name: labels
          description: Labels to filter tasks
          schema:
            type: string
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: string
                    priority:
                      type: string
                    labels:
                      type: array
                      items:
                        type: string
                    status:
                      type: string
                    startDate:
                      type: string
                      format: date-time
                    dueDate:
                      type: string
                      format: date-time
                    assignee:
                      type: string
                    attachments:
                      type: array
                      items:
                        type: string
        '401':
          description: Unauthorized
    post:
      summary: Create a new task
      operationId: createTask
      tags:
        - Task Management
      description: Creates a new task within a specific board.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: boardId
          required: true
          description: The ID of the board
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                priority:
                  type: string
                labels:
                  type: array
                  items:
                    type: string
                status:
                  type: string
                startDate:
                  type: string
                  format: date-time
                dueDate:
                  type: string
                  format: date-time
                assignee:
                  type: string
                attachments:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  description:
                    type: string
                  priority:
                    type: string
                  labels:
                    type: array
                    items:
                      type: string
                  status:
                    type: string
                  startDate:
                    type: string
                    format: date-time
                  dueDate:
                    type: string
                    format: date-time
                  assignee:
                    type: string
                  attachments:
                    type: array
                    items:
                      type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized
  /notifications:
    get:
      summary: Get notifications for a user
      operationId: getNotifications
      tags:
        - Notification Management
      description: Retrieves all notifications for the authenticated user.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of notifications
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    message:
                      type: string
                    read:
                      type: boolean
                    createdAt:
                      type: string
                      format: date-time
        '401':
          description: Unauthorized
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
